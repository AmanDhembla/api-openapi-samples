x-commons:
  common-responses: &common_responses
    '400':
      $ref: '#/components/responses/400BadRequest'
    '429':
      $ref: '#/components/responses/429TooManyRequests'
    '503':
      $ref: '#/components/responses/503ServiceUnavailable'
    default:
      $ref: '#/components/responses/default'
  common-headers: &common_headers
    X-RateLimit-Limit:
      $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/X-RateLimit-Limit'
    X-RateLimit-Remaining:
      $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/X-RateLimit-Remaining'
    X-RateLimit-Reset:
      $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/X-RateLimit-Reset'

openapi: 3.0.0
servers:
  - url: 'http://dati.mit.gov.it/catalog/api/3/action'
info:
  description: >
    API per ricercare e visualizzare gli open data del Ministero delle Infrastrutture e dei Trasporti.


    #### Documentazione
    Il portale dei dati aperti dati.mit.gov.it è realizzato e manutenuto dal Ministero delle infrastrutture
    e dei trasporti con il coordinamento della Direzione generale per i Sistemi Informativi e Statistici.

    Tramite queste API è possibile ricercare e
    visualizzare gli open data nazionali presenti sul portale.


    #### Note

    Per ulteriori informazioni si veda la pagina [crediti di opencantieri](http://opencantieri.mit.gov.it/crediti)

    #### Informazioni tecniche ed esempi

    Queste API non sono strettamente REST e **non utilizzano i metodi PUT e DELETE**,
    ma solamente i metodi GET e POST.

    ##### Autenticazione

    Le API esposte non richiedono autenticazione e permettono solamente il download dei dati.

    ##### Esempi
    Query di esempio:

      * elenca i dataset
    ```
    curl "http://dati.mit.gov.it/catalog/api/3/action/package_list?limit=5"
    ```

      * mostra il dataset __abitazioni__

    ```
    curl "http://dati.mit.gov.it/catalog/api/3/action/package_show?id=digiroa"
    ```

  version: '3'
  title: Opendata MIT
  x-api-id: 28a40681-4c28-45c9-9bda-7e55d1d6ec68
  contact:
    name: "Ministero Infrastrutture e Trasporti"
    email: opendata@mit.gov.it
    url: 'http://opencantieri.mit.gov.it/crediti'
  termsOfService: >-
    http://www.mit.gov.it/note-legali
  x-audience:
    - public
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: public
    description: Operations available to all citizens
paths:
  /package_list:
    get:
      tags:
        - public
      summary: List all datasets within given limit
      operationId: listInventory
      description: |
        List or search all datasets
      parameters:
        - in: query
          name: offset
          description: 'when limit is given, the offset to start returning packages from'
          required: false
          schema:
            type: integer
        - in: query
          name: limit
          description: >-
            if given, the list of datasets will be broken into pages of at most
            limit datasets per page and only one page will be returned at a time
            (optional)
          schema:
            type: integer
            format: int32
      responses:
        <<: *common_responses
        '200':
          $ref: '#/components/responses/CkanResponse'

  /package_search:
    get:
      tags:
        - public
      summary: Search among all datasets
      operationId: searchInventory
      description: |
        List or search all datasets
      parameters:
        - in: query
          name: q
          description: 'the solr query. For example ``name:pdf-testi``'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: >
            any filter queries to apply. Note: +site_id:{ckan_site_id} is added
            to this string prior to the query being executed.
          schema:
            type: string
        - in: query
          name: sort
          description: >
            sorting of the search results. Optional. **Default: 'relevance asc,
            metadata_modified desc'**. As per the solr documentation, this is a
            comma-separated string of field names and sort-orderings.
          required: false
          schema:
            type: string
            default: 'relevance asc, metadata_modified desc'
        - in: query
          name: rows
          description: >-
            the number of matching rows to return. There is a hard limit of 1000
            datasets per query.
          required: false
          schema:
            type: integer
        - in: query
          name: start
          description: >-
            the offset in the complete result for where the set of returned
            datasets should begin.
          schema:
            type: integer
        - in: query
          name: include_drafts
          description: >-
            if True, draft datasets will be included in the results. A user will
            only be returned their own draft datasets, and a sysadmin will be
            returned all draft datasets. Optional, the default is False.
          schema:
            type: boolean
            default: false
      responses:
        <<: *common_responses
        '200':
          $ref: '#/components/responses/CkanResponse'
        '409':
          description: Conflict (can result e.g. from incorrectly formatted solr query)
  /package_show:
    get:
      tags:
        - public
      summary: Get details of one package
      operationId: showInventory
      description: |
        List or search all datasets
      parameters:
        - in: query
          name: id
          description: the id or name of the dataset
          required: true
          schema:
            type: string
        - in: query
          name: include_tracking
          description: |
            add tracking information to dataset and resources (default: False)
          schema:
            type: boolean
            default: false
      responses:
        <<: *common_responses
        '200':
          $ref: '#/components/responses/CkanResponse'
  /organization_list:
    get:
      tags:
        - public
      summary: List all groups within given parameters
      operationId: listOrgs
      description: |
        List or search all datasets
      parameters:
        - in: query
          name: sort
          description: >
            sorting of the search results. Optional. Default: “name asc” string
            of field name and sort-order. The allowed fields are ‘name’,
            ‘package_count’ and ‘title’
          required: false
          schema:
            type: string
            default: name asc
        - in: query
          name: limit
          description: >
            if given, the list of organizations will be broken into pages of at
            most limit organizations per page and only one page will be returned
            at a time (optional)
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          description: >
            when limit is given, the offset to start returning organizations
            from
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: organizations
          description: >
            a list of names of the groups to return, if given only groups whose
            names are in this list will be returned (optional)
          required: false
          schema:
            type: string
        - in: query
          name: all_fields
          description: >
            return group dictionaries instead of just names. Only core fields
            are returned - get some more using the include_* options. Returning
            a list of packages is too expensive, so the packages property for
            each group is deprecated, but there is a count of the packages in
            the package_count property. (optional, default: False)
          required: false
          schema:
            type: boolean
        - in: query
          name: include_dataset_count
          description: >
            if all_fields, include the full package_count (optional, default:
            True)
          schema:
            type: boolean
            default: true
        - in: query
          name: include_extras
          description: >
            if all_fields, include the organization extra fields (optional,
            default: False)
          schema:
            type: boolean
            default: false
        - in: query
          name: include_tags
          description: >
            if all_fields, include the organization tags (optional, default:
            False)
          schema:
            type: boolean
            default: false
        - in: query
          name: include_groups
          description: >
            if all_fields, include the organizations the organizations are in
            (optional, default: False)
          schema:
            type: boolean
            default: false
        - in: query
          name: include_users
          description: >
            if all_fields, include the organization users (optional, default:
            False).
          schema:
            type: boolean
            default: false
      responses:
        <<: *common_responses
        '200':
          $ref: '#/components/responses/CkanResponse'
  /user_list:
    get:
      tags:
        - consumers
      summary: List all groups within given parameters
      description: |
        List or search all datasets
      operationId: listUsers
      parameters:
        - name: sort
          in: query
          description: |
            sorting of the search results. Optional. Default: “name asc” string of field name and sort-order. The allowed fields are ‘name’, ‘package_count’ and ‘title’
          required: false
          schema:
            default: name asc
            type: string
        - name: limit
          in: query
          description: |
            if given, the list of organizations will be broken into pages of at most limit organizations per page and only one page will be returned at a time (optional)
          schema:
            format: int32
            type: integer
        - name: offset
          in: query
          description: |
            when limit is given, the offset to start returning organizations from
          required: false
          schema:
            format: int32
            type: integer
        - name: organizations
          in: query
          description: |
            a list of names of the groups to return, if given only groups whose names are in this list will be returned (optional)
          required: false
          schema:
            type: string
        - name: all_fields
          in: query
          description: |
            return group dictionaries instead of just names. Only core fields are returned
            - get some more using the include_* options. Returning a list of packages is too
            expensive, so the packages property for each group is deprecated, but there is a
            count of the packages in the package_count property. (optional, default: False)
          required: false
          schema:
            type: boolean
        - name: include_dataset_count
          in: query
          description: |
            if all_fields, include the full package_count (optional, default: True)
          schema:
            default: true
            type: boolean
        - name: include_extras
          in: query
          description: |
            if all_fields, include the organization extra fields (optional, default: False)
          schema:
            default: false
            type: boolean
        - name: include_tags
          in: query
          description: |
            if all_fields, include the organization tags (optional, default: False)
          schema:
            default: false
            type: boolean
        - name: include_groups
          in: query
          description: |
            if all_fields, include the organizations the organizations are in (optional, default: False)
          schema:
            default: false
            type: boolean
        - name: include_users
          in: query
          description: |
            if all_fields, include the organization users (optional, default: False).
          schema:
            default: false
            type: boolean
      responses:
        <<: *common_responses
        200:
          $ref: '#/components/responses/CkanResponse'


components:
  responses:
    CkanResponse:
      description: |
        Standard Ckan Reply. See http://docs.ckan.org/en/latest/api/index.html.
      headers:
        <<: *common_headers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CkanReply'
    400BadRequest:
      description: |
        Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CkanError'
    403Forbidden:
      description: |
        Missing authorization key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CkanError'
    409AlreadyExists:
      description: |
        Item already exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CkanError'
    429TooManyRequests:
      description: >-
        Too Many Requests
      headers:
        <<: *common_headers
        Retry-After:
          $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/Retry-After'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CkanError'
    503ServiceUnavailable:
      description: >-
        Service Unavailable
      headers:
        Retry-After:
          $ref: 'https://teamdigitale.github.io/openapi/headers/v3.yaml#/Retry-After'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CkanError'
    default:
      description: >-
        Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CkanError'

  securitySchemes:
    ckanapikey:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    CkanError:
      type: object
      required:
        - result
        - success
        - help
        - error
      properties:
        result:
          anyOf:
            - type: object
            - type: array
        error:
          type: object
        help:
          type: string
          format: url
        status:
          type: boolean
          enum:
            - false
    CkanReply:
      type: object
      required:
        - result
        - success
        - help
      properties:
        result:
          anyOf:
            - type: object
            - type: array
        error:
          type: object
        help:
          type: string
          format: url
        status:
          type: boolean
          enum:
            - true
            - false
