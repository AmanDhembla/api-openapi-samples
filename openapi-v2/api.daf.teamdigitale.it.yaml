openapi: 3.0.0
servers:
  - url: 'https://api.daf.teamdigitale.it/dati-gov/ckan_proxy'
x-origin:
  - url: >-
      https://raw.githubusercontent.com/teamdigitale/api-openapi-samples/ckan-v3-stubs/openapi-v2/api.daf.teamdigitale.it.yml
    format: swagger
    version: '2.0'
    converter:
      url: 'https://github.com/mermade/swagger2openapi'
      version: 2.11.5
info:
  description: >
    Simple API to manage open data sets in api.daf.teamdigitale.it.


    # Important note

    This is not a traditional rest API in the strict sense. **It does not use
    PUT or DELETE http methods**. Instead, it does everything with GET or POST
    methods. This means that the color coding in the (swagger) documentation is
    misleading.


    # Open and limited access functions


    Functions which can be used **without authorization are grouped under
    _consumers_**.

    Some API functions **require authorization (grouped under _admins_)**. With
    these methods you will need API key provided by CKAN system.


    **In every API call you need to provide APInf platform specific API-key**.
    You can get that by creating account. After logging in, your API key is
    visible in every API profile page (top right corner).

    <center>

    ![Imgur](https://i.imgur.com/bEGmr2s.png)

    </center>


    # A few simple examples


    **Simple example to list datasets** is:


    ``curl -X GET
    "https://api.daf.teamdigitale.it/dati-gov/ckan_proxy/package_list" -H
    "X-API-Key: YOUR APINF API KEY"``


    which returns JSON formatted list of datasets.


    **Simple example to view details of one dataset** is:


    ``curl -X GET
    "https://api.daf.teamdigitale.it/dati-gov/ckan_proxy/package_show?id=digiroad"
    -H  "X-API-Key: YOUR APINF API KEY"``


    which returns JSON formatted detailed infomation about identified dataset.



    # Authentication and API keys


    There's two kind of keys:

    - **X-API-Key**. APInf Platform API key used in analytics. This required in
    all API calls. You can get that by creating account. After logging in, your
    API key is visible in every API profile page (right top corner).

    - **Authorization**. To authorize user to do admin operations in CKAN
    system. This key can be obtained by signing up to https://beta.avoindata.fi.


    Some API functions require authorization (grouped under _admins_). The API
    uses the same authorization functions and configuration as the web
    interface, so if a user is authorized to do something in the web interface
    they’ll be authorized to do it via the API as well.


    When calling an API function that requires authorization, you must
    authenticate yourself by providing your API key with your HTTP request. To
    find your API key, login to the CKAN site using its web interface and visit
    your user profile page. In SwaggerUI, you need to input CKAN authorization
    API-key to _Authorization_ value field. Open authentication dialog by
    clicking _Authorize_ button.


    # Datamodels


    All datamodels used are defined in separate service. LINKS HERE!
  version: '3'
  title: DAF CKAN API
  x-api-id: 3ab5b162-132b-49fa-96c2-c81557823cda
  contact:
    email: alessandro@teamdigitale.governo.it
    url: 'https://dataportal.daf.teamdigitale.it/'
  termsOfService: >-
    TODO ereditare la parte sensata da
    http://geodati.gov.it/geoportale/note-legali
  x-audience:
    - public
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: consumers
    description: Operations available to regular consumers
paths:
  /package_list:
    get:
      tags:
        - consumers
      summary: List all datasets within given limit
      operationId: listInventory
      description: |
        List or search all datasets
      parameters:
        - in: query
          name: offset
          description: 'when limit is given, the offset to start returning packages from'
          required: false
          schema:
            type: integer
        - in: query
          name: limit
          description: >-
            if given, the list of datasets will be broken into pages of at most
            limit datasets per page and only one page will be returned at a time
            (optional)
          schema:
            type: integer
            format: int32
      responses:
        '200':
          $ref: '#/components/responses/CkanResponse'
        '400':
          - $ref: '#/components/responses/400BadRequest'
        default:
          - $ref: '#/components/responses/default'

  /package_search:
    get:
      tags:
        - consumers
      summary: Search among all datasets
      operationId: searchInventory
      description: |
        List or search all datasets
      parameters:
        - in: query
          name: q
          description: 'the solr query. For example ``name:pdf-testi``'
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: >
            any filter queries to apply. Note: +site_id:{ckan_site_id} is added
            to this string prior to the query being executed.
          schema:
            type: string
        - in: query
          name: sort
          description: >
            sorting of the search results. Optional. **Default: 'relevance asc,
            metadata_modified desc'**. As per the solr documentation, this is a
            comma-separated string of field names and sort-orderings.
          required: false
          schema:
            type: string
            default: 'relevance asc, metadata_modified desc'
        - in: query
          name: rows
          description: >-
            the number of matching rows to return. There is a hard limit of 1000
            datasets per query.
          required: false
          schema:
            type: integer
        - in: query
          name: start
          description: >-
            the offset in the complete result for where the set of returned
            datasets should begin.
          schema:
            type: integer
        - in: query
          name: include_drafts
          description: >-
            if True, draft datasets will be included in the results. A user will
            only be returned their own draft datasets, and a sysadmin will be
            returned all draft datasets. Optional, the default is False.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          $ref: '#/components/responses/CkanResponse'
        '400':
          - $ref: '#/components/responses/400BadRequest'
        '409':
          description: Conflict (can result e.g. from incorrectly formatted solr query)
        default:
          - $ref: '#/components/responses/default'

  /package_show:
    get:
      tags:
        - consumers
      summary: Get details of one package
      operationId: showInventory
      description: |
        List or search all datasets
      parameters:
        - in: query
          name: id
          description: the id or name of the dataset
          required: true
          schema:
            type: string
        - in: query
          name: include_tracking
          description: |
            add tracking information to dataset and resources (default: False)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          $ref: '#/components/responses/CkanResponse'
        '400':
          - $ref: '#/components/responses/400BadRequest'
        default:
          - $ref: '#/components/responses/default'
  /organization_list:
    get:
      tags:
        - consumers
      summary: List all groups within given parameters
      operationId: listOrgs
      description: |
        List or search all datasets
      parameters:
        - in: query
          name: sort
          description: >
            sorting of the search results. Optional. Default: “name asc” string
            of field name and sort-order. The allowed fields are ‘name’,
            ‘package_count’ and ‘title’
          required: false
          schema:
            type: string
            default: name asc
        - in: query
          name: limit
          description: >
            if given, the list of organizations will be broken into pages of at
            most limit organizations per page and only one page will be returned
            at a time (optional)
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          description: >
            when limit is given, the offset to start returning organizations
            from
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: organizations
          description: >
            a list of names of the groups to return, if given only groups whose
            names are in this list will be returned (optional)
          required: false
          schema:
            type: string
        - in: query
          name: all_fields
          description: >
            return group dictionaries instead of just names. Only core fields
            are returned - get some more using the include_* options. Returning
            a list of packages is too expensive, so the packages property for
            each group is deprecated, but there is a count of the packages in
            the package_count property. (optional, default: False)
          required: false
          schema:
            type: boolean
        - in: query
          name: include_dataset_count
          description: >
            if all_fields, include the full package_count (optional, default:
            True)
          schema:
            type: boolean
            default: true
        - in: query
          name: include_extras
          description: >
            if all_fields, include the organization extra fields (optional,
            default: False)
          schema:
            type: boolean
            default: false
        - in: query
          name: include_tags
          description: >
            if all_fields, include the organization tags (optional, default:
            False)
          schema:
            type: boolean
            default: false
        - in: query
          name: include_groups
          description: >
            if all_fields, include the organizations the organizations are in
            (optional, default: False)
          schema:
            type: boolean
            default: false
        - in: query
          name: include_users
          description: >
            if all_fields, include the organization users (optional, default:
            False).
          schema:
            type: boolean
            default: false
      responses:
        '200':
          $ref: '#/components/responses/CkanResponse'
        '400':
          - $ref: '#/components/responses/400BadRequest'
        default:
          - $ref: '#/components/responses/default'

  /package_create:
    post:
      security:
        - ckanapikey: []
      tags:
        - admins
      summary: Create a new dataset (package)
      operationId: addDataset
      description: >-
        Creates a new dataset (package) to the system. You must be authorized to
        create new datasets. If you specify any groups for the new dataset, you
        must also be authorized to edit these groups.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataset_package_create'
        description: Inventory item to add
      responses:
        '201':
          description: item created
        '400':
          - $ref: '#/components/responses/400BadRequest'
        '409':
          - $ref: '#/components/responses/409AlreadyExists'
        default:
          - $ref: '#/components/responses/default'
  /package_update:
    post:
      security:
        - ckanapikey: []
      tags:
        - admins
      summary: Update a dataset (package).
      operationId: updateDataset
      description: >-
        Update a dataset (package). You must be authorized to edit the dataset
        and the groups that it belongs to.
      responses:
        '200':
          description: 'OK, dataset updated.'
        '400':
          - $ref: '#/components/responses/400BadRequest'
        '404':
          description: Object not found for update.
        default:
          - $ref: '#/components/responses/default'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataset_package_update'
        description: Inventory item to add
  /package_delete:
    post:
      security:
        - ckanapikey: []
      tags:
        - admins
      summary: Delete a dataset (package)
      operationId: deleteDataset
      description: >-
        This makes the dataset disappear from all web & API views, apart from
        the trash.
      responses:
        '200':
          description: 'OK, dataset deleted.'
        '404':
          description: Object not found for deletion.
        default:
          - $ref: '#/components/responses/default'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete'
        description: id (string) – the id or name of the dataset to delete.
  /organization_create:
    post:
      security:
        - ckanapikey: []
      tags:
        - admins
      summary: Create a new organization.
      operationId: addOrg
      description: >-
        Create a new organization. You must be authorized to create
        organizations.
      responses:
        '201':
          description: Organization created
        '400':
          - $ref: '#/components/responses/400BadRequest'
        '409':
          - $ref: '#/components/responses/409AlreadyExists'
        default:
          - $ref: '#/components/responses/default'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataset_organization_create'
        description: Inventory item to add
  /organization_update:
    post:
      security:
        - ckanapikey: []
      tags:
        - admins
      summary: Update a organization.
      operationId: updateOrg
      description: Update a organization. You must be authorized to edit the organization.
      responses:
        '200':
          description: 'OK, updated.'
        '400':
          - $ref: '#/components/responses/400BadRequest'
        '404':
          description: Organization not found for update.
        default:
          - $ref: '#/components/responses/default'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataset_organization_update'
        description: Inventory item to add
  /organization_delete:
    post:
      security:
        - ckanapikey: []
      tags:
        - admins
      summary: Delete an organization.
      operationId: deleteOrg
      description: >-
        Delete an organization. You must be authorized to delete the
        organization.
      responses:
        '200':
          description: 'OK, organization deleted.'
        '400':
          - $ref: '#/components/responses/400BadRequest'
        '404':
          description: Organization not found for deletion.
        default:
          - $ref: '#/components/responses/default'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/delete'
        description: id (string) – the id or name of the organization to delete
  /user_list:
    get:
      security:
        - ckanapikey: []
      tags:
        - admins
      summary: List users
      operationId: listUsers
      description: |
        Return a list of the site’s user accounts. I there is no match, an empty list is returned.
      parameters:
        - in: query
          name: q
          required: false
          description: >-
            Restrict the users returned to those whose names contain a string.
            Optional.
          schema:
            type: string
            default: '*'
        - in: query
          name: order_by
          required: false
          description: >-
            Which field to sort the list by. Can be any user field or edits
            (i.e. number_of_edits). Optional.
          schema:
            type: string
            default: '*'
        - in: query
          name: all_fields
          required: false
          description: Return full user dictionaries instead of just names.  Optional.
          schema:
            type: boolean
            default: true
      responses:
        '200':
          $ref: '#/components/responses/CkanResponse'
          content:
            application/json:
              examples:
                response:
                  value:
                    help: >-
                      https://beta.avoindata.fi/data/api/3/action/help_show?name=user_list
                    success: true
                    result:
                      - openid: null
                        about: null
                        apikey: 916f7088-5828-4e25-a0da-f5fcad281af2
                        display_name: makkonenmakkonen
                        name: etunimi sukunimi
                        created: '2017-10-31T15:05:59.402582'
                        email: esa.merkki@apinf.io
                        sysadmin: false
                        activity_streams_email_notifications: false
                        state: active
                        number_of_edits: 3
                        fullname: null
                        id: 9d886b53-2f4a-4ed8-8482-bd2cb9d0d5fe
                        number_created_packages: 3
        '400':
          - $ref: '#/components/responses/400BadRequest'
        '403':
          - $ref: '#/components/responses/403Forbidden'
        '409':
          - $ref: '#/components/responses/409AlreadyExists'
        default:
          - $ref: '#/components/responses/default'
components:
  responses:
    CkanResponse:
      description: |
        Standard Ckan Reply. See http://docs.ckan.org/en/latest/api/index.html.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CkanReply'
    400BadRequest:
      description: |
        Invalid input
      application/json:
        schema:
          $ref: '#/components/schemas/CkanError'
    403Forbidden:
      description: |
        Missing authorization key
      application/json:
        schema:
          $ref: '#/components/schemas/CkanError'
    409AlreadyExists:
      description: |
        Item already exists
      application/json:
        schema:
          $ref: '#/components/schemas/CkanError'
    Error:
      description: |
        An unexpected status has been returned.

  securitySchemes:
    ckanapikey:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    CkanError:
      type: object
      required:
        - result
        - success
        - help
        - error
      properties:
        result:
          anyOf:
            - object
            - array
        error:
          type: object
        help:
          type: string
          format: url
        status:
          type: boolean
          enum:
            - false
    CkanReply:
      type: object
      required:
        - result
        - success
        - help
      properties:
        result:
          anyOf:
            - object
            - array
        error:
          type: object
        help:
          type: string
          format: url
        status:
          type: boolean
          enum:
            - true
            - false
    delete:
      type: object
      properties:
        id:
          type: string
          example: id-to-delete
          description: |
            Id to delete
    dataset_package_create:
      type: object
      required:
        - name
        - collection_type
        - license_id
        - owner_org
        - keywords
        - title_translated
        - notes_translated
        - maintainer
        - maintainer_email
      properties:
        name:
          type: string
          description: >
            the name of the new dataset, must be between 2 and 100 characters
            long and contain only lowercase alphanumeric characters, - and _,
            e.g. 'warandpeace'
          example: name
        collection_type:
          type: string
          default: Open Data
          description: |
            'Open Data' or 'Interoperability Tools' values allowed
          example: Open Data
        license_id:
          type: string
          example: EUPL
          description: |
            License
        owner_org:
          type: string
          description: |
            Owner; 'yksityishenkilo' value allowed at the moment
          example: yksityishenkilo
        keywords:
          type: object
          description: |
            Localised keywords
          example:
            fi:
              - eka
              - toka
              - kolmas
        title_translated:
          type: object
          description: |
            list of localised titles
          example:
            fi: Aihe suomeksi
            de: Thema in Deutsche
        notes_translated:
          type: object
          description: |
            list of localised notes
          example:
            fi: Muistiinpanot suomeksi
            de: Notiz in Deutsche
        maintainer:
          type: string
          description: |
            Maintainer of this data
          example: Jarkko Pöntiö
        maintainer_email:
          type: string
          description: |
            Maintainer email
          example: jarkko.pontio@somedomainhere.com
    dataset_package_update:
      type: object
      required:
        - id
        - name
        - license_id
        - collection_type
        - owner_org
      properties:
        id:
          type: string
          example: example id
          description: |
            the name or id of the dataset to update
        name:
          type: string
          example: organization
          description: name of the package to update
        license_id:
          type: string
          description: id of the licence
          example: ididididid
        collection_type:
          type: string
          default: Open Data
          description: |
            'Open Data' or 'Interoperability Tools' values allowed
          example: Open Data
        owner_org:
          type: string
          description: |
            Owner; 'yksityishenkilo' value allowed at the moment
          example: yksityishenkilo
    dataset_organization_create:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: nameofanorganization
          description: >
            Name (string) – the name of the organization, a string between 2 and
            100 characters long, containing only lowercase alphanumeric
            characters, - and _
        id:
          type: string
          example: ididididid
          description: |
            ID of the organization (optional)
        title:
          type: string
          example: title
          description: |
            the title of the organization (optional)
        description:
          type: string
          example: great organization
          description: |
            Description of the organization
        image_url:
          type: string
          example: 'http://image.url.com/exxaample.gif'
          description: >
            the URL to an image to be displayed on the organization’s page
            (optional)
        state:
          type: string
          example: active
          description: >
            the current state of the organization, e.g. 'active' or 'deleted',
            only active organizations show up in search results and other lists
            of organizations, this parameter will be ignored if you are not
            authorized to change the state of the organization (optional,
            default: 'active')
        approval_status:
          type: string
          example: status description
          description: |
            (string) – (optional)
        extras:
          type: object
          example:
            - value:
                - value1
              key:
                - key1
              active:
                - 'false'
          description: >
            (list of dataset extra dictionaries) – the organization’s extras
            (optional), extras are arbitrary (key: value) metadata items that
            can be added to organizations, each extra dictionary should have
            keys 'key' (a string), 'value' (a string), and optionally 'deleted'
        packages:
          type: object
          example:
            - id: 8de6e388-20c1-dddd-df3d-c445f447f1cg
              title: title
          description: >
            (list of dictionaries) – the datasets (packages) that belong to the
            organization, a list of dictionaries each with keys 'name' (string,
            the id or name of the dataset) and optionally 'title' (string, the
            title of the dataset)
        users:
          type: object
          example:
            - name: mikko
              capacity: capacity manager
            - name: suusanna
          description: >
            (list of dictionaries) – the datasets (packages) that belong to the
            organization, a list of dictionaries each with keys 'name' (string,
            the id or name of the dataset) and optionally 'title' (string, the
            title of the dataset)
    dataset_organization_update:
      type: object
      required:
        - id
      properties:
        name:
          type: string
          example: nameofanorganization
          description: >
            Name (string) – the name of the organization, a string between 2 and
            100 characters long, containing only lowercase alphanumeric
            characters, - and _
        id:
          type: string
          example: ididididid
          description: |
            ID of the organization
    user:
    properties:
      about:
        id: about
        required: true
        type: string
      activity_streams_email_notifications:
        id: activity_streams_email_notifications
        required: true
        type: string
      apikey:
        id: apikey
        required: true
        type: string
      created:
        id: created
        required: true
        type: string
      display_name:
        id: display_name
        required: true
        type: string
      email:
        id: email
        required: true
        type: string
      fullname:
        id: fullname
        required: true
        type: string
      id:
        id: id
        required: true
        type: string
      name:
        id: name
        required: true
        type: string
      number_created_packages:
        id: number_created_packages
        required: true
        type: string
      number_of_edits:
        id: number_of_edits
        required: true
        type: string
      openid:
        id: openid
        required: true
        type: string
      state:
        id: state
        required: true
        type: string
      sysadmin:
        id: sysadmin
        required: true
        type: string
