swagger: '2.0'
definitions:
  Problem:
    properties:
      detail:
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: Connection to database timed out
        type: string
      instance:
        description: >
          An absolute URI that identifies the specific occurrence of the
          problem.

          It may or may not yield further information if dereferenced.
        format: uri
        type: string
      status:
        description: >
          The HTTP status code generated by the origin server for this
          occurrence

          of the problem.
        example: 503
        exclusiveMaximum: true
        format: int32
        maximum: 600
        minimum: 100
        type: integer
      title:
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
        type: string
      type:
        default: 'about:blank'
        description: |
          An absolute URI that identifies the problem type.  When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        example: 'https://tools.ietf.org/html/rfc7231#section-6.6.4'
        format: uri
        type: string
    type: object
  SampleEntry:
    description: |-
      This entry shows a set of common fields to be used
      with their proper format and description.
    properties:
      created:
        description: The object creation time.
        type: date-time
      id:
        description: |-
          The unique and opaque identifier for the entry, which:
            * is unique in its context;
            * will not be reused in time;
            * is not a number.
        format: uuid
        type: string
      modified:
        description: The object modification time.
        type: date-time
x-components:
  parameters:
    Etag:
      description: |
        The RFC7232 ETag header field in a response provides the current entity-
        tag for the selected resource. An entity-tag is an opaque identifier for
        different versions of a resource over time, regardless whether multiple
        versions are valid at the same time. An entity-tag consists of an opaque
        quoted string, possibly prefixed by a weakness indicator.
      example: 'W/"xy", "5", "7da7a728-f910-11e6-942a-68f728c1ba70"'
      in: header
      name: Etag
      required: false
      schema:
        type: string
    IfMatch:
      description: |
        The RFC7232 If-Match header field in a request requires the server to
        only operate on the resource that matches at least one of the provided
        entity-tags. This allows clients express a precondition that prevent
        the method from being applied if there have been any changes to the
        resource.
      example: '"5", "7da7a728-f910-11e6-942a-68f728c1ba70"'
      in: header
      name: If-Match
      required: false
      schema:
        type: string
    IfNoneMatch:
      description: |
        The RFC7232 If-None-Match header field in a request requires the server
        to only operate on the resource if it does not match any of the provided
        entity-tags. If the provided entity-tag is `*`, it is required that the
        resource does not exist at all.
      example: '"7da7a728-f910-11e6-942a-68f728c1ba70", *'
      in: header
      name: If-None-Match
      required: false
      schema:
        type: string
    cursor:
      description: An opaque identifier that points to the next item in the collection.
      example: 01BX9NSMKVXXS5PSP2FATZM123
      in: query
      name: cursor
      schema:
        type: string
    fields:
      description: Fields to retrieve
      in: query
      name: fields
      schema:
        type: string
    limit:
      description: How many items to return at one time (max 100)
      in: query
      name: limit
      schema:
        format: int32
        type: integer
    offset:
      description: The zero-ary offset index into the results
      in: query
      name: offset
      schema:
        default: 0
        format: int32
        type: integer
    q:
      description: Search query term
      in: query
      name: q
      schema:
        type: string
    sort:
      description: Sorting order
      in: query
      name: sort
      schema:
        example: +name
        type: string
  responses:
    400BadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/definitions/Problem'
      description: Bad Request
    404NotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/definitions/Problem'
      description: Not Found
    429TooManyRequests:
      content:
        application/problem+json:
          schema:
            $ref: '#/definitions/Problem'
      description: Too many requests
      headers:
        Retry-After:
          $ref: '#/x-components/headers/Retry-After'
        X-RateLimit-Limit:
          $ref: '#/x-components/headers/X-RateLimit-Limit'
        X-RateLimit-Remaining:
          $ref: '#/x-components/headers/X-RateLimit-Remaining'
        X-RateLimit-Reset:
          $ref: '#/x-components/headers/X-RateLimit-Reset'
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/definitions/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/x-components/headers/Retry-After'
    default:
      content:
        application/problem+json:
          schema:
            $ref: '#/definitions/Problem'
      description: Unexpected error
  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      schema:
        format: int32
        type: integer
    X-RateLimit-Limit:
      description: The number of allowed requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Remaining:
      description: The number of remaining requests in the current period
      schema:
        format: int32
        type: integer
    X-RateLimit-Reset:
      description: The number of seconds left in the current period
      schema:
        format: int32
        type: integer

