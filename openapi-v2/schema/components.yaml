swagger: '2.0'
definitions:
  Error:
    properties:
      code:
        format: int32
        type: integer
      message:
        type: string
    required:
      - code
      - message
  Problem:
    properties:
      detail:
        description: |
          A human readable explanation specific to this occurrence of the
          problem.
        example: Connection to database timed out
        type: string
      instance:
        description: >
          An absolute URI that identifies the specific occurrence of the
          problem.

          It may or may not yield further information if dereferenced.
        format: uri
        type: string
      status:
        description: >
          The HTTP status code generated by the origin server for this
          occurrence

          of the problem.
        example: 503
        exclusiveMaximum: true
        format: int32
        maximum: 600
        minimum: 100
        type: integer
      title:
        description: |
          A short, summary of the problem type. Written in english and readable
          for engineers (usually not suited for non technical stakeholders and
          not localized); example: Service Unavailable
        type: string
      type:
        default: 'about:blank'
        description: |
          An absolute URI that identifies the problem type.  When dereferenced,
          it SHOULD provide human-readable documentation for the problem type
          (e.g., using HTML).
        example: 'https://zalando.github.io/problem/constraint-violation'
        format: uri
        type: string
    type: object
  SampleEntry:
    description: |-
      This entry shows a set of common fields to be used
      with their proper format and description.
    properties:
      created:
        description: The object creation time.
        type: date-time
      id:
        description: |-
          The unique and opaque identifier for the entry, which:
            * is unique in its context;
            * will not be reused in time;
            * is not a number.
        format: uuid
        type: string
      modified:
        description: The object modification time.
        type: date-time
x-components:
  parameters:
    cursor:
      description: An opaque identifier that points to the next item in the collection.
      in: query
      name: cursor
      x-example: 01BX9NSMKVXXS5PSP2FATZM123
      type: string
    fields:
      description: Fields to retrieve
      in: query
      name: fields
      type: string
    limit:
      description: How many items to return at one time (max 100)
      in: query
      name: limit
      format: int32
      type: integer
    offset:
      description: The zero-ary offset index into the results
      in: query
      name: offset
      default: 0
      format: int32
      type: integer
    q:
      description: Search query term
      in: query
      name: q
      type: string
    sort:
      description: Sorting order
      in: query
      name: sort
      x-example: +name
      type: string
  responses:
    400BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
      description: Bad Request
    404NotFound:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
      description: Not Found
    429TooManyRequests:
      content:
        application/json:
          schema:
            $ref: '#/definitions/Error'
      description: Too many requests
      headers:
        X-Rate-Limit-Limit:
          $ref: '#/x-components/headers/X-Rate-Limit-Limit'
        X-Rate-Limit-Remaining:
          $ref: '#/x-components/headers/X-Rate-Limit-Remaining'
        X-Rate-Limit-Reset:
          $ref: '#/x-components/headers/X-Rate-Limit-Reset'
    503ServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/definitions/Problem'
      description: Service Unavailable
      headers:
        Retry-After:
          $ref: '#/x-components/headers/Retry-After'
    default:
      content:
        application/problem+json:
          schema:
            $ref: '#/definitions/Problem'
      description: Unexpected error
  headers:
    Retry-After:
      description: |-
        Retry contacting the endpoint *at least* after seconds.
        See https://tools.ietf.org/html/rfc7231#section-7.1.3
      format: int32
      type: integer
    X-Rate-Limit-Limit:
      description: The number of allowed requests in the current period
      format: int32
      type: integer
    X-Rate-Limit-Remaining:
      description: The number of remaining requests in the current period
      format: int32
      type: integer
    X-Rate-Limit-Reset:
      description: The number of seconds left in the current period
      format: int32
      type: integer
