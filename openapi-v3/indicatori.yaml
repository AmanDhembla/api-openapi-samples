openapi: 3.0.2
info:
  title: API Indicatori
  version: 0.0.1beta
  description: |-
    L'API permette di pubblicare una serie di indicatori associati ad una determinata area amministrativa 
    (comune, unità territoriale sovracomunale, regione) con granularità giornaliera.

    Gli indicatori pubblicabili possono variare nel tempo e ad ogni indicatore possono essere associati 
    dei metadati utili ad indicarne il corretto significato.
    Gli indicatori possono essere dati campionati o elaborati.

    L'API permette di ritornare l'area geografica di riferimento in formato geojson
    o un link al file geojson di riferimento.

    A seconda della richiesta i dati possono essere ritornati in JSON, GeoJSON o CSV.

    La possibilità di fare ricerche è opzionale.
    Va' capito come restituire uno schema "flat" in formato CSV in caso gli indicatori variassero nel tempo
    e come renderizzare eventuali dati "sparse" quando i valori mancano: 
    una soluzione potrebbe essere usare gli URI degli indicatori come nomi dei campi del csv.

    I path sono separati perché non è detto che la somma (eg. dei dati delle province) corrisponda col totale
    dei dati regionali a causa di possibili difficoltà nel campionamento o di problematiche amministrative
    (eg. trasferimenti, disallineamenti dovuti alla durata temporale dei campionamenti, errori umani, ...).


paths:
  /search:
    get:
      description: |-
        Non implementato per ora. Potremmo ricercare per unità amministrativa
  /unita-di-campionamento/{codice_unita}/{data_campionamento}:
    get:
      operationId: get_dati_unita
      description: |-
        Potremmo ritornare i dati per unità di campionamento, ossia la minima
        entità che campiona i dati. Chiedere feedback agli interessati  
  /unita-territoriale-sovracomunale/{codice_uts}/{data_campionamento}:
    get:
      operationId: get_dati_uts
      description: |-
        Usare la provincia potrebbe essere più chiaro, ma non coprire eventuali
        casi dove i dati sono raccolti a livello di UTS. Chiedere feedback agli interessati
  /comune/{codice_comune}/{data_campionamento}:
    get:
      operationId: get_dati_comune
      description: |-
        Come per regione, stessi dati da ritornare ma con uno schema di Location che include
        codice_uts e codice_comune.
  /regione/{codice_regione}/{data_campionamento}:
    get:
      operationId: get_dati_regione
      description: |-
        Ritorna i dati epidemiologici di una regione eventualmente
        georeferenziati se il content-type richiesto è geo+json.
      parameters:
      - name: codice_regione
        in: path
        required: true
        schema:
          type: number
          minimum: 1
          maximum: 20
          example: 1
      - name: data_campionamento
        in: path
        required: true
        schema:
          type: string
          format: date
          description: |-
            basta usare la data o serve date-time? Nel secondo caso
            dobbiamo inserire la timezone.
      - name: indicatori
        in: query
        description: |-
          Gli indicatori da ritornare
        schema:
          type: string
      - name: meta
        in: query
        description: |-
          mostra/nasconde i metadati degli indicatori. Un indicatore senza metadati

          ```
          { "nome": "casi_positivi", "valore": "10000" }
          ```

          Un indicatore con i metadati

          ```
          { "nome": "casi_positivi", "valore": "10000",
            "url": "https://covid.api/casi_positivi",
            "descrizione": "I casi positivi, inclusi i negativizzati, i guariti ed i deceduti"
          }
          ```

        schema:
          type: boolean
          default: true
      - name: format
        in: query
        description: |-
          Il formato da ritornare
        schema:
          type: string
          enum: 
          - json
          - geojson
          - csv
      responses:
        '200':
          description: |-
            I dati vengono ritornati correttamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data'
            application/geo+json:
              schema:
                $ref: '#/components/schemas/GeoJsonData'
info:
  version: 1.3.1
  title: covid api
components:
  schemas:
    Data:
      type: object
      properties:
        data_ultima_modifica:
          format: date-time
          type: string
          description: |-
            timestamp di ultima modifica del gruppo di indicatori. Possiamo
            valutare se questa data sia da associare a tutto il set di indicatori
            o vada invece assegnata ad ogni singolo indicatore (potrebbe essere
            una ulteriore complessità).
        data_campionamento:
          type: string
          format: date
          description: |
            data a cui si riferisce il dato, a prescindere dalla data
            di pubblicazione. Ad esempio:
            il 2020-01-10 pubblico gli indicatori campionati il 2020-01-08
            il 2020-01-11 mi accorgo che gli indicatori campionati il 2020-01-08
              erano parziali e li aggiorno
            il 2020-01-20 andando a richiedere gli indicatori relativi al 2020-01-08
              l'API ritornerà quelli nuovi
        location:
          $ref: '#/components/schemas/Location'
        indicators:
          type: array
          items:
            $ref: '#/components/schemas/Indicatore'
    GeoJsonFeature:
      $ref: https://geojson.org/schema/Feature.json
    GeoJsonData:
      allOf:
        - $ref: '#/components/schemas/GeoJsonFeature'
        - properties:
            properties:
              $ref: '#/components/schemas/Data'
    Indicatore:
      properties:
        nome:
          type: string
        valore:
          type: string
        descrizione:
          type: string
        uri:
          type: string
          format: url
          description: |-
            ad ogni indicatore è assegnato un URI che lo rende univoco e che
            può anche referenziare un URL dove questo viene definito semanticamente.
      example:
        nome: casi_positivi
        valore: "10000"
        descrizione: "il numero di casi positivi"
        uri: "https://covid.api/indicatori/casi_positivi"
    Location:
      type: object
      description: The root schema comprises the entire JSON document.
      example:
          codice_stato: ITA
          nome_stato: Italia
          codice_regione: '17'
          denominazione_regione: Basilicata
          codice_provincia: '076'
          denominazione_provincia: Potenza
          sigla_provincia: PZ
          denominazione_comune: Potenza
          codice_comune: '076063'
      required:
        - codice_stato
        - nome_stato
        - codice_regione
        - denominazione_regione
        - codice_provincia
        - denominazione_provincia
        - sigla_provincia
        - denominazione_comune
        - codice_comune
      additionalProperties: true
      properties:
        codice_stato:
          type: string
          example: ITA
        nome_stato:
          type: string
          example: Italia
        codice_regione:
          type: string
          example: '17'
        denominazione_regione:
          type: string
          example: Basilicata
        codice_provincia:
          type: string
          title: The codice_provincia schema
          example: '076'
        denominazione_provincia:
          type: string
          example: Potenza
        sigla_provincia:
          type: string
          example: PZ
        denominazione_comune:
          type: string
          example: Potenza
        codice_comune:
          type: string
          example: '076063'
      
