openapi: 3.0.2
info:
  title: API Indicatori
  version: 0.0.1beta
  description: >-
    L'API permette di pubblicare una serie di indicatori associati ad una
    determinata area amministrativa 

    (comune, unità territoriale sovracomunale, regione) con granularità
    giornaliera.


    Gli indicatori pubblicabili possono variare nel tempo e ad ogni indicatore
    possono essere associati 

    dei metadati utili ad indicarne il corretto significato.

    Gli indicatori possono essere dati campionati o elaborati.


    L'API permette di ritornare l'area geografica di riferimento in formato
    geojson

    o un link al file geojson di riferimento.


    A seconda della richiesta i dati possono essere ritornati in JSON, GeoJSON o
    CSV.


    La possibilità di fare ricerche è opzionale.

    Va' capito come restituire uno schema "flat" in formato CSV in caso gli
    indicatori variassero nel tempo

    e come renderizzare eventuali dati "sparse" quando i valori mancano: 

    una soluzione potrebbe essere usare gli URI degli indicatori come nomi dei
    campi del csv.


    I path sono separati perché non è detto che la somma (eg. dei dati delle
    province) corrisponda col totale

    dei dati regionali a causa di possibili difficoltà nel campionamento o di
    problematiche amministrative

    (eg. trasferimenti, disallineamenti dovuti alla durata temporale dei
    campionamenti, errori umani, ...).
x-commons:
  common-parameters:
    parameters: &ref_0
      - name: data_campionamento
        in: path
        required: true
        schema:
          type: string
          format: date
          description: |-
            basta usare la data o serve date-time? Nel secondo caso
            dobbiamo inserire la timezone.
      - name: indicatori
        in: query
        description: Gli indicatori da ritornare
        schema:
          type: string
      - name: meta
        in: query
        description: >-
          mostra/nasconde i metadati degli indicatori. Un indicatore senza
          metadati


          ```

          { "nome": "casi_positivi", "valore": "10000" }

          ```


          Un indicatore con i metadati


          ```

          { "nome": "casi_positivi", "valore": "10000",
            "url": "https://covid.api/casi_positivi",
            "descrizione": "I casi positivi, inclusi i negativizzati, i guariti ed i deceduti"
          }

          ```
        schema:
          type: boolean
          default: true
      - name: format
        in: query
        description: Il formato da ritornare
        schema:
          type: string
          enum:
            - json
            - geojson
            - csv
paths:
  /search:
    get:
      description: Non implementato per ora. Potremmo ricercare per unità amministrativa
      responses:
        '501':
          description: not implemented
  '/regione/{codice_regione}/{data_campionamento}':
    parameters: *ref_0
    get:
      operationId: get_dati_regione
      description: |-
        Ritorna i dati epidemiologici di una regione eventualmente
        georeferenziati se il content-type richiesto è geo+json.
      parameters:
        - name: codice_regione
          in: path
          required: true
          schema:
            type: number
            minimum: 1
            maximum: 20
            example: 1
      responses:
        '200':
          $ref: '#/components/responses/DatiIndicatoriRegione'
  '/unita-di-campionamento/{codice_unita}/{data_campionamento}':
    parameters: *ref_0
    get:
      parameters:
        - name: codice_unita
          schema:
            type: string
          required: true
          in: path
      operationId: get_dati_unita
      description: |-
        Potremmo ritornare i dati per unità di campionamento, ossia la minima
        entità che campiona i dati. Chiedere feedback agli interessati  
      responses:
        '200':
          $ref: '#/components/responses/DatiIndicatori'
  '/unita-territoriale-sovracomunale/{codice_uts}/{data_campionamento}':
    parameters: *ref_0
    get:
      parameters:
        - name: codice_uts
          schema:
            type: string
          required: true
          in: path
      operationId: get_dati_uts
      description: >-
        Usare la provincia potrebbe essere più chiaro, ma non coprire eventuali

        casi dove i dati sono raccolti a livello di UTS. Chiedere feedback agli
        interessati
      responses:
        '200':
          $ref: '#/components/responses/DatiIndicatori'
  '/comune/{codice_comune}/{data_campionamento}':
    parameters: *ref_0
    get:
      parameters:
        - name: codice_comune
          in: path
          required: true
          schema:
            type: string
      operationId: get_dati_comune
      description: >-
        Come per regione, stessi dati da ritornare ma con uno schema di Location
        che include

        codice_uts e codice_comune.
      responses:
        '200':
          $ref: '#/components/responses/DatiIndicatori'
components:
  examples:
    csv_short:
      summary: CSV Comune short
      value: |-
        data_comunicazione,data_campionamento,ricoverati_con_sintomi,terapia_intensiva,totale_ospedalizzati,isolamento_domiciliare,totale_positivi,variazione_totale_positivi,nuovi_positivi,dimessi_guariti,deceduti,totale_casi,tamponi,casi_testati
        "2020-05-26T08:39:16Z","2020-05-20","076063",231,9,240,1369,1609,-62,4,1132,366,3107,48903,34428
    
    regione_completo:
      summary: Esempio Regione
      value:
        data_comunicazione: '2020-05-26T08:39:16.656Z'
        data_ultima_modifica: '2020-05-26T08:39:16.656Z'
        data_campionamento: '2020-05-26'
        luogo:
          codice_stato: ITA
          nome_stato: Italia
          codice_regione: '17'
          denominazione_regione: Basilicata
        indicatori:
          - nome: ricoverati_con_sintomi
            valore: '231'
            descrizione: |-
              Attuale numero di casi positivi che sono ricoverati in reparti diversi dalla terapia intensiva; 
            formula: |-
              ricoverati_totale - di_cui_ricoverati_in_terapia_intensiva

          - nome: terapia_intensiva
            valore: '9'
          - nome: totale_ospedalizzati
            valore: '240'
          - nome: isolamento_domiciliare
            valore: '1369'
          - nome: totale_positivi
            valore: '1609'
          - nome: variazione_totale_positivi
            valore: '-62'
          - nome: nuovi_positivi
            valore: '4'
          - nome: dimessi_guariti
            valore: '1132'
          - nome: deceduti
            valore: '366'
          - nome: totale_casi
            valore: '3107'
          - nome: tamponi
            valore: '48903'
          - nome: casi_testati
            valore: '34428'

    comune_completo:
      summary: Esempio Comune
      value:
        data_comunicazione: '2020-05-26T08:39:16.656Z'
        data_ultima_modifica: '2020-05-26T08:39:16.656Z'
        data_campionamento: '2020-05-26'
        luogo:
          codice_stato: ITA
          nome_stato: Italia
          codice_regione: '17'
          denominazione_regione: Basilicata
          codice_provincia: '076'
          denominazione_provincia: Potenza
          sigla_provincia: PZ
          denominazione_comune: Potenza
          codice_comune: '076063'
        indicatori:
          - nome: ricoverati_con_sintomi
            valore: '231'
            descrizione: |-
              Attuale numero di casi positivi che sono ricoverati in reparti diversi dalla terapia intensiva; 
            formula: |-
              ricoverati_totale - di_cui_ricoverati_in_terapia_intensiva
          - nome: terapia_intensiva
            valore: '9'
          - nome: totale_ospedalizzati
            valore: '240'
          - nome: isolamento_domiciliare
            valore: '1369'
          - nome: totale_positivi
            valore: '1609'
          - nome: variazione_totale_positivi
            valore: '-62'
          - nome: nuovi_positivi
            valore: '4'
          - nome: dimessi_guariti
            valore: '1132'
          - nome: deceduti
            valore: '366'
          - nome: totale_casi
            valore: '3107'
          - nome: tamponi
            valore: '48903'
          - nome: casi_testati
            valore: '34428'
    comune_short:
      summary: Esempio Comune Short
      value:
        data_comunicazione: '2020-05-26T08:39:16.656Z'
        data_ultima_modifica: '2020-05-26T08:39:16.656Z'
        data_campionamento: '2020-05-26'
        luogo:
          codice_stato: ITA
          codice_regione: '17'
          codice_provincia: '076'
          codice_comune: '076063'
        indicatori:
          - nome: ricoverati_con_sintomi
            valore: '231'
          - nome: terapia_intensiva
            valore: '9'
          - nome: totale_ospedalizzati
            valore: '240'
          - nome: isolamento_domiciliare
            valore: '1369'
          - nome: totale_positivi
            valore: '1609'
          - nome: variazione_totale_positivi
            valore: '-62'
          - nome: nuovi_positivi
            valore: '4'
          - nome: dimessi_guariti
            valore: '1132'
          - nome: deceduti
            valore: '366'
          - nome: totale_casi
            valore: '3107'
          - nome: tamponi
            valore: '48903'
          - nome: casi_testati
            valore: '34428'

  responses:
    DatiIndicatoriRegione:
      description: I dati vengono ritornati correttamente.
      content:
        application/csv:
          schema:
            {}
          examples:
            csv_short:
              $ref: '#/components/examples/csv_short'
        application/json:
          schema:
            $ref: '#/components/schemas/Data'
          examples:
            regione_compleo:
              $ref: '#/components/examples/regione_completo'
        application/geo+json:
          schema:
            $ref: '#/components/schemas/GeoJsonData'

    DatiIndicatori:
      description: I dati vengono ritornati correttamente.
      content:
        application/csv:
          schema:
            {}
          examples:
            csv_short:
              $ref: '#/components/examples/csv_short'
        application/json:
          schema:
            $ref: '#/components/schemas/Data'
        application/geo+json:
          schema:
            $ref: '#/components/schemas/GeoJsonData'
  schemas:
    Data:
      type: object
      properties:
        data_comunicazione:
          type: string
          format: date-time
        data_ultima_modifica:
          format: date-time
          type: string
          description: >-
            timestamp di ultima modifica del gruppo di indicatori. Possiamo

            valutare se questa data sia da associare a tutto il set di
            indicatori

            o vada invece assegnata ad ogni singolo indicatore (potrebbe essere

            una ulteriore complessità).
        data_campionamento:
          type: string
          format: date
          description: >
            data a cui si riferisce il dato, a prescindere dalla data

            di pubblicazione. Ad esempio:

            il 2020-01-10 pubblico gli indicatori campionati il 2020-01-08

            il 2020-01-11 mi accorgo che gli indicatori campionati il 2020-01-08
              erano parziali e li aggiorno
            il 2020-01-20 andando a richiedere gli indicatori relativi al
            2020-01-08
              l'API ritornerà quelli nuovi
        luogo:
          $ref: '#/components/schemas/Location'
        indicatori:
          type: array
          items:
            $ref: '#/components/schemas/Indicatore'
    GeoJsonFeature:
      $ref: 'https://geojson.org/schema/Feature.json'
    GeoJsonData:
      allOf:
        - $ref: '#/components/schemas/GeoJsonFeature'
        - properties:
            properties:
              $ref: '#/components/schemas/Data'
    Indicatore:
      required:
        - nome
        - valore
      properties:
        nome:
          type: string
        valore:
          type: string
        descrizione:
          type: string
        uri:
          type: string
          format: url
          description: >-
            ad ogni indicatore è assegnato un URI che lo rende univoco e che

            può anche referenziare un URL dove questo viene definito
            semanticamente.
      example:
        nome: casi_positivi
        valore: '10000'
        descrizione: il numero di casi positivi
        uri: 'https://covid.api/indicatori/casi_positivi'
    Location:
      type: object
      description: The root schema comprises the entire JSON document.
      example:
        codice_stato: ITA
        nome_stato: Italia
        codice_regione: '17'
        denominazione_regione: Basilicata
        codice_provincia: '076'
        denominazione_provincia: Potenza
        sigla_provincia: PZ
        denominazione_comune: Potenza
        codice_comune: '076063'
      required:
        - codice_stato
        - codice_regione
        - codice_provincia
        - codice_comune
      additionalProperties: true
      properties:
        codice_stato:
          type: string
          example: ITA
          description: >-
            vedi
            https://github.com/italia/daf-ontologie-vocabolari-controllati/blob/master/VocabolariControllati/territorial-classifications/countries/italy/italy.ttl
        nome_stato:
          type: string
          example: Italia
        codice_regione:
          type: string
          example: '17'
        denominazione_regione:
          type: string
          example: Basilicata
        codice_provincia:
          type: string
          title: The codice_provincia schema
          example: '076'
        denominazione_provincia:
          type: string
          example: Potenza
        sigla_provincia:
          type: string
          example: PZ
        denominazione_comune:
          type: string
          example: Potenza
        codice_comune:
          type: string
          example: '076063'
